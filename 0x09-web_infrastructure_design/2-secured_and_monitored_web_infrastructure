For every additional element, why you are adding it?
Adding firewalls is essential to make sure that what you recive is the same as your own standards. The https is going to host the website in a secure way using my borwser
without risking any leak of informaion. The monitoring system is essenital to keep track of every server's situation and configure soluations in case somethings aren't working or in case of a failure.

What are firewalls for?
To make sure your browser is collecting the information you actually need without causing any harm to your device by making sure of it's content when recieving packets.
Why is the traffic served over HTTPS?
Because if you don't want your information or someone to know your identity while you're roaming the internet, it's better to use it.
What monitoring is used for?
The monitoring system is essenital to keep track of every server's situation and configure soluations in case somethings aren't working or in case of a failure.
How the monitoring tool is collecting data?
You can set it to collect data from your servers after specific amount of time, then apply rules to make sure it's working according to what you have set as a standard from your server.
Explain what to do if you want to monitor your web server QPS?
I will insert the monitor in parallel with the web server to measure the APACHE statues of the web server itself before it goes into further operations.
You must be able to explain what the issues are with this infrastructure:
Why terminating SSL at the load balancer level is an issue?
Your ssl being terminated can poses a security risk because the data that are passing across the network from the load balancer
to the App Server are now unencrypted, and that will leave applications vulnerable to Man-in-the-Middle Attack
Why having only one MySQL server capable of accepting writes is an issue
Because now your data base can be modified by anyone if an attack was made to the server, which may cause false lead of information when a request is being made.
Why having servers with all the same components (database, web server and application server) might be a problem
Both the web server/app code and SQL Server would cache commonly requested data in memory and you're killing your cache performance by running them in the same memory space. Another issue is that 
Security is a major concern as well.
